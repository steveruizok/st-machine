{"moduleFile":{"sourceFilePath":"/Users/stephenruiz/GitHub/st-machine/src/components/demo-button/demo-button.tsx","localImports":["/Users/stephenruiz/GitHub/st-machine/src/st-machine"],"externalImports":["@stencil/core"],"potentialCmpRefs":[],"cmpMeta":{"tagNameMeta":"demo-button","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"/Users/stephenruiz/GitHub/st-machine/src/components/demo-button/demo-button.css","cmpRelativePath":"demo-button.css","originalComponentPath":"demo-button.css"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"DemoButton","documentation":"","type":"typeof DemoButton"},"encapsulation":0,"componentClass":"DemoButton","membersMeta":{"mState":{"memberType":5}},"eventsMeta":[],"listenersMeta":[]},"hasSlot":false,"hasSvg":false,"jsFilePath":"/Users/stephenruiz/GitHub/st-machine/src/components/demo-button/demo-button.js"},"jsText":"import StateMachine from \"../../st-machine\";\r\nconst stateMap = {\r\n    initial: \"off\",\r\n    states: [\r\n        {\r\n            name: \"off\",\r\n            transitions: [{ action: \"hover\", response: \"hovered\" }],\r\n            states: [\r\n                {\r\n                    name: \"hovered\",\r\n                    transitions: [\r\n                        { action: \"click\", response: \"on\" },\r\n                        { action: \"unhover\", response: \"off\" }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\nconst Machine = new StateMachine(stateMap);\r\nexport class DemoButton {\r\n    componentWillLoad() {\r\n        Machine.subscribe(this);\r\n    }\r\n    render() {\r\n        let buttonProps = {\r\n            borderRadius: \"4px\",\r\n            background: \"#efefef\",\r\n            padding: \"16px\"\r\n        };\r\n        switch (Machine.current.state.name) {\r\n            case \"off\":\r\n                break;\r\n            case \"hovered\":\r\n                buttonProps = Object.assign({}, buttonProps);\r\n                {\r\n                    background: \"#e3e3e3\";\r\n                }\r\n        }\r\n        break;\r\n    }\r\n    static get is() { return \"demo-button\"; }\r\n    static get properties() { return {\r\n        \"mState\": {\r\n            \"state\": true\r\n        }\r\n    }; }\r\n    static get style() { return \"/**style-placeholder:demo-button:**/\"; }\r\n}\r\nlet button = h(\"div\", buttonProps, \"hello world\");\r\nreturn (h(\"div\", null,\r\n    h(\"div\", { class: \"card machine-status\" },\r\n        h(\"p\", { class: \"label\" }, \"Current State\"),\r\n        h(\"p\", null,\r\n            \"Current state: \",\r\n            h(\"b\", null, Machine.current.name)),\r\n        h(\"p\", null,\r\n            \"Current path:\",\r\n            \" \",\r\n            h(\"b\", null, Machine.current.path.map(p => p.name).join(\" > \"))),\r\n        h(\"p\", null,\r\n            \"Current payload: \",\r\n            h(\"b\", null, Machine.current.payload)),\r\n        h(\"p\", null,\r\n            \"Set on: \",\r\n            h(\"b\", null, Machine.current.date.toLocaleString())),\r\n        h(\"p\", null,\r\n            \"Duration: \",\r\n            h(\"b\", null, Machine.current.duration))),\r\n    h(\"div\", { class: \"card machine-controls\" }, button),\r\n    h(\"div\", { class: \"card machine-undo-redo\" },\r\n        h(\"p\", { class: \"label\" }, \"History\"),\r\n        h(\"button\", { onClick: Machine.undo }, \"Undo\"),\r\n        h(\"button\", { onClick: Machine.redo }, \"Redo\"))));\r\n"}